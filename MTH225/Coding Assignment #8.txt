#AJ Natzic
#Coding Assignment #8
#Discrete Structures 

def difference(sequence):	# this returns a list of differences from an inputted sequence
  
  newList = []			# a new list is made to hold the difference
  
  for i in range(0, len(sequence)):	# iterate through 0 and the length of the inputted sequence
    if i != 0:				# do not do anything for the first term
      newList.append(sequence[i] - sequence[i - 1])	# for the rest of the terms, take each element and subtract the element that came before it
    
      
  return newList			# return the new list of differences


def delta2(sequence):
  # this returns a boolean value based on whether the given sequence is delta 2 (quadratic) or not
  
  difSeq = difference(sequence)
  # sets variable "difSeq" to the list of differences generated by the difference() method
  
  
  for i in range(0, len(difSeq)):
    # iterates through the length of the difference sequence
    if(i != 0 and i != 1):
           # skips 1 and 2 elements 
      if(difSeq[i] - difSeq[i - 1] != difSeq[i-1] - difSeq[i-2]):	# if the current term minus the previous term does not equal the previous term minus the term before that then return false
        
        return False
        
  


  return True 		# otherwise, the difference of terms is constant and therefore is a quadratic sequence